generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id                   String       @id @default(cuid())
  email                String       @unique
  name                 String
  password             String
  role                 Role         @default(FREE)
  isActive             Boolean      @default(true)
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  deactivatedAt        DateTime?
  memberships          Membership[]
  purchases            Purchase[]
  videos               Video[]

  @@index([email])
  @@index([role])
  @@map("customers")
}

model Category {
  id            String    @id @default(cuid())
  name          String
  description   String?
  slug          String    @unique
  isActive      Boolean   @default(true)
  sortOrder     Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
  videos        Video[]

  @@index([slug])
  @@index([isActive])
  @@index([sortOrder])
  @@map("categories")
}

model Video {
  id            String    @id @default(cuid())
  title         String
  description   String?
  url           String
  thumbnail     String?
  duration      Int?
  isPublished   Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
  customerId    String
  categoryId    String?
  Category      Category? @relation(fields: [categoryId], references: [id])
  customer      Customer  @relation(fields: [customerId], references: [id])

  @@index([customerId])
  @@index([isPublished])
  @@map("videos")
}

model Membership {
  id            String    @id @default(cuid())
  customerId    String
  startDate     DateTime  @default(now())
  endDate       DateTime
  isActive      Boolean   @default(true)
  planType      String    @default("monthly")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
  customer      Customer  @relation(fields: [customerId], references: [id])

  @@map("memberships")
}

model Purchase {
  id            String    @id @default(cuid())
  customerId    String
  amount        Float
  paymentAmount Float
  event         String
  status        String    @default("completed")
  customerName  String
  customerEmail String
  customerPhone String?
  customerTaxId String?
  products      Json?
  webhookData   Json?
  paymentMethod String?
  transactionId String?
  devMode       Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deactivatedAt DateTime?
  customer      Customer  @relation(fields: [customerId], references: [id])

  @@index([customerId])
  @@index([customerEmail])
  @@index([status])
  @@index([createdAt])
  @@map("purchases")
}

enum Role {
  FREE
  MEMBER
  ADMIN
}
